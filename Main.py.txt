import tkinter as tk
from tkinter import messagebox, simpledialog, ttk
import json
import os
import csv

# --- File Setup ---
if not os.path.exists('users.json'):
    with open('users.json', 'w') as f:
        json.dump({'admin': 'admin123'}, f)

if not os.path.exists('inventory.json'):
    with open('inventory.json', 'w') as f:
        json.dump({}, f)

# --- Authentication ---
def login():
    username = simpledialog.askstring("Login", "Enter username:")
    password = simpledialog.askstring("Login", "Enter password:", show="*")

    with open('users.json', 'r') as f:
        users = json.load(f)

    if username in users and users[username] == password:
        open_inventory()
    else:
        messagebox.showerror("Error", "Invalid login")

# --- Inventory Management GUI ---
def open_inventory():
    inv_win = tk.Tk()
    inv_win.title("Inventory Management")

    style = ttk.Style()
    style.configure('TButton', font=('Arial', 10), padding=5)

    def refresh():
        for widget in frame.winfo_children():
            widget.destroy()
        with open('inventory.json', 'r') as f:
            data = json.load(f)
        for name, details in data.items():
            row = tk.Frame(frame)
            row.pack(pady=2)

            qty = details['qty']
            label_text = f"{name} - Qty: {qty}"
            label_color = "red" if qty < 5 else "black"

            tk.Label(row, text=label_text, fg=label_color, width=25).pack(side=tk.LEFT)
            ttk.Button(row, text="Edit", command=lambda n=name: edit_item(n)).pack(side=tk.LEFT)
            ttk.Button(row, text="Delete", command=lambda n=name: delete_item(n)).pack(side=tk.LEFT)

    def add_item():
        name = name_entry.get()
        qty = int(qty_entry.get())
        with open('inventory.json', 'r') as f:
            data = json.load(f)
        data[name] = {"qty": qty}
        with open('inventory.json', 'w') as f:
            json.dump(data, f)
        refresh()

    def edit_item(product_name):
        new_qty = simpledialog.askinteger("Edit Quantity", f"Enter new quantity for {product_name}:")
        if new_qty is not None:
            with open('inventory.json', 'r') as f:
                data = json.load(f)
            data[product_name]['qty'] = new_qty
            with open('inventory.json', 'w') as f:
                json.dump(data, f)
            refresh()

    def delete_item(product_name):
        confirm = messagebox.askyesno("Delete", f"Delete {product_name}?")
        if confirm:
            with open('inventory.json', 'r') as f:
                data = json.load(f)
            data.pop(product_name, None)
            with open('inventory.json', 'w') as f:
                json.dump(data, f)
            refresh()

    def export_csv():
        with open('inventory.json', 'r') as f:
            data = json.load(f)
        with open('inventory_report.csv', 'w', newline='') as f:
            writer = csv.writer(f)
            writer.writerow(["Product Name", "Quantity"])
            for name, details in data.items():
                writer.writerow([name, details['qty']])
        messagebox.showinfo("Exported", "Report saved as inventory_report.csv")

    tk.Label(inv_win, text="Product Name").pack()
    name_entry = tk.Entry(inv_win)
    name_entry.pack()
    tk.Label(inv_win, text="Quantity").pack()
    qty_entry = tk.Entry(inv_win)
    qty_entry.pack()

    ttk.Button(inv_win, text="Add/Update", command=add_item).pack(pady=5)
    ttk.Button(inv_win, text="Export Report", command=export_csv).pack(pady=5)

    frame = tk.Frame(inv_win)
    frame.pack()
    refresh()
    inv_win.mainloop()

# --- Start App ---
root = tk.Tk()
root.title("Login")
ttk.Button(root, text="Login", command=login).pack(pady=10)
root.mainloop()